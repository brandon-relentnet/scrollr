version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: scrollr-database
    environment:
      POSTGRES_DB: ${DB_DATABASE:-scrollr_db}
      POSTGRES_USER: ${DB_USER:-scrollr_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scrollr_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - scrollr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-scrollr_user} -d ${DB_DATABASE:-scrollr_db}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Accounts Service
  accounts:
    build:
      context: ./accounts
      dockerfile: Dockerfile
    container_name: scrollr-accounts
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-scrollr_db}
      - DB_USER=${DB_USER:-scrollr_user}
      - DB_PASSWORD=${DB_PASSWORD:-scrollr_password}
      - DB_SSL=false
      - ACCOUNTS_PORT=5000
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "${ACCOUNTS_PORT:-5000}:5000"
    volumes:
      - ./logs:/app/logs
    networks:
      - scrollr-network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Finance Service
  finance:
    build:
      context: ./finance
      dockerfile: Dockerfile
    container_name: scrollr-finance
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-scrollr_db}
      - DB_USER=${DB_USER:-scrollr_user}
      - DB_PASSWORD=${DB_PASSWORD:-scrollr_password}
      - DB_SSL=false
      - FINANCE_PORT=4001
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
      - WS_HEARTBEAT_INTERVAL=${WS_HEARTBEAT_INTERVAL:-30000}
      - WS_RECONNECT_INTERVAL=${WS_RECONNECT_INTERVAL:-5000}
      - API_RATE_LIMIT_WINDOW=${API_RATE_LIMIT_WINDOW:-60000}
      - API_RATE_LIMIT_MAX=${API_RATE_LIMIT_MAX:-60}
      - CACHE_TTL=${CACHE_TTL:-300}
    ports:
      - "${FINANCE_PORT:-4001}:4001"
    volumes:
      - ./logs:/app/logs
    networks:
      - scrollr-network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sports Service
  sports:
    build:
      context: ./sports
      dockerfile: Dockerfile
    container_name: scrollr-sports
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-scrollr_db}
      - DB_USER=${DB_USER:-scrollr_user}
      - DB_PASSWORD=${DB_PASSWORD:-scrollr_password}
      - DB_SSL=false
      - SPORTS_PORT=4000
      - ESPN_API_URL=${ESPN_API_URL:-https://site.api.espn.com/apis/site/v2/sports}
      - ESPN_API_KEY=${ESPN_API_KEY:-}
      - ESPN_API_SECRET=${ESPN_API_SECRET:-}
      - WS_HEARTBEAT_INTERVAL=${WS_HEARTBEAT_INTERVAL:-30000}
      - WS_MAX_CONNECTIONS=${WS_MAX_CONNECTIONS:-1000}
      - POLL_INTERVAL_MINUTES=${POLL_INTERVAL_MINUTES:-1}
      - DAILY_SCHEDULE_HOUR=${DAILY_SCHEDULE_HOUR:-3}
      - DAILY_SCHEDULE_TIMEZONE=${DAILY_SCHEDULE_TIMEZONE:-America/New_York}
      - ENABLE_CACHE=${ENABLE_CACHE:-true}
      - CACHE_DURATION_MINUTES=${CACHE_DURATION_MINUTES:-5}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE_PATH=/app/logs/sports.log
    ports:
      - "${SPORTS_PORT:-4000}:4000"
    volumes:
      - ./logs:/app/logs
    networks:
      - scrollr-network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  scrollr-network:
    driver: bridge