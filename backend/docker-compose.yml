services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: scrollr-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      - scrollr-network
    depends_on:
      - accounts
      - finance
      - sports
      - landing
    restart: unless-stopped

  # Simple static landing page
  landing:
    image: nginx:alpine
    container_name: scrollr-landing
    volumes:
      - ./landing/index.html:/usr/share/nginx/html/index.html:ro
    expose:
      - "80"
    networks:
      - scrollr-network
    restart: unless-stopped

  # Accounts Service
  accounts:
    build:
      context: ./accounts
      dockerfile: Dockerfile
    container_name: scrollr-accounts
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-true}
      - ACCOUNTS_PORT=5000
      - JWT_SECRET=${JWT_SECRET}
    expose:
      - "5000"
    volumes:
      - ./logs:/app/logs
    networks:
      - scrollr-network
    restart: unless-stopped

  # Finance Service
  finance:
    build:
      context: ./finance
      dockerfile: Dockerfile
    container_name: scrollr-finance
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-true}
      - FINANCE_PORT=4001
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
      - WS_HEARTBEAT_INTERVAL=${WS_HEARTBEAT_INTERVAL:-30000}
      - WS_RECONNECT_INTERVAL=${WS_RECONNECT_INTERVAL:-5000}
      - API_RATE_LIMIT_WINDOW=${API_RATE_LIMIT_WINDOW:-60000}
      - API_RATE_LIMIT_MAX=${API_RATE_LIMIT_MAX:-60}
      - CACHE_TTL=${CACHE_TTL:-300}
    expose:
      - "4001"
    volumes:
      - ./logs:/app/logs
    networks:
      - scrollr-network
    restart: unless-stopped

  # Sports Service
  sports:
    build:
      context: ./sports
      dockerfile: Dockerfile
    container_name: scrollr-sports
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-true}
      - SPORTS_PORT=4000
      - ESPN_API_URL=${ESPN_API_URL:-https://site.api.espn.com/apis/site/v2/sports}
      - ESPN_API_KEY=${ESPN_API_KEY:-}
      - ESPN_API_SECRET=${ESPN_API_SECRET:-}
      - WS_HEARTBEAT_INTERVAL=${WS_HEARTBEAT_INTERVAL:-30000}
      - WS_MAX_CONNECTIONS=${WS_MAX_CONNECTIONS:-1000}
      - POLL_INTERVAL_MINUTES=${POLL_INTERVAL_MINUTES:-1}
      - DAILY_SCHEDULE_HOUR=${DAILY_SCHEDULE_HOUR:-3}
      - DAILY_SCHEDULE_TIMEZONE=${DAILY_SCHEDULE_TIMEZONE:-America/New_York}
      - ENABLE_CACHE=${ENABLE_CACHE:-true}
      - CACHE_DURATION_MINUTES=${CACHE_DURATION_MINUTES:-5}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE_PATH=/app/logs/sports.log
    expose:
      - "4000"
    volumes:
      - ./logs:/app/logs
    networks:
      - scrollr-network
    restart: unless-stopped

networks:
  scrollr-network:
    driver: bridge